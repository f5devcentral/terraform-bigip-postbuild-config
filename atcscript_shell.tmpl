#!/bin/bash

sleep ${initial_wait}
response=0
retries=0
echo "checking ATC service availability..."
# wait for the service to become available 
# there may be some transient errors as the 
# target service is installed and starts up
while [ $response -ne 200 ] && [ $retries -lt ${retry_limit} ]
do
    response=$(curl -kL -u "${bigip_user}:${bigip_password}" \
        --write-out '%%{http_code}' \
        --silent \
        --output /dev/null \
        https://${bigip_address}${bigip_atc_status_endpoint}) 
    retries=$(($retries+1))
    echo "ATC endpoint for service status: $response"
    case $response in
        200)
        echo "ATC endpoint is available"
        break
        ;;
        204)
        echo "ATC endpoint is available"
        response=200
        break
        ;;        
    esac
    sleep ${poll_interval}
done
if [ $response -ne 200 ]; then
    echo "ERROR: ATC SERVICE IS UNAVAILABLE"
    exit 255
fi
retries=0
response=0
# checking that the service isn't in use by another
# process
# scenarios have been encountered when processes
# started by cloud-init are using the services
# and haven't completed yet
# it's better to wait for the previous request to 
# complete before submitting the next
while [ $response -ne 200 ] && [ $retries -lt ${retry_limit} ]
do
    sleep ${poll_interval}
    response=$(curl -kL -u "${bigip_user}:${bigip_password}" \
        --write-out '%%{http_code}' \
        --silent \
        --output /dev/null \
        https://${bigip_address}${bigip_atc_endpoint}) 
    retries=$(($retries+1))
    echo "ATC endpoint service availability: $response"
    case $response in
        200)
        echo "ATC service available for use"
        break
        ;;
        202)
        echo "ATC service in use"
        ;;
        204)
        echo "No content returned - assuming ATC service available for use"
        response=200
        break
        ;;        
        422)
        echo "ATC service in failed state - likely from a previous run."
        response=200
        break
        ;;
        4* | 5*)
        echo "ATC service in failed state - this may be transient"
        ;;
        *)
        echo "unexpected ATC service availability"
        ;;
    esac
done 
if [ $response -ne 200 ]; then
    echo "ERROR: ATC SERVICE IS UNAVAILABLE"
    exit 255
fi
sleep ${initial_wait}
